import "jsr:@std/dotenv/load";
import { PrismaClient } from "../generated/client/deno/edge.ts";

const prisma = new PrismaClient();

async function checkEnvironment() {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...");

    const requiredEnvVars = [
        "BOT_TOKEN",
        "NEWS_API_KEY",
        "DATABASE_URL"
    ];

    let allVarsPresent = true;
    for (const envVar of requiredEnvVars) {
        if (!Deno.env.get(envVar)) {
            console.error(`‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${envVar}`);
            allVarsPresent = false;
        }
    }

    if (!allVarsPresent) {
        console.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è");
        Deno.exit(1);
    }

    console.log("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã");
}

async function checkDatabase() {
    console.log("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");

    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await prisma.$connect();
        console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ");

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        const categories = await prisma.category.findMany();
        if (categories.length === 0) {
            console.log("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—É—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω—è–µ–º...");
            await populateCategories();
        } else {
            console.log(`‚úÖ –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π`);
        }

    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö:", error);
        Deno.exit(1);
    } finally {
        await prisma.$disconnect();
    }
}

async function populateCategories() {
    const categories = [
        "business",
        "entertainment",
        "general",
        "health",
        "science",
        "sports",
        "technology"
    ];

    for (const category of categories) {
        await prisma.category.upsert({
            where: { name: category },
            update: {},
            create: { name: category }
        });
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}`);
    }
}

async function main() {
    console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...\n");

    await checkEnvironment();
    await checkDatabase();

    console.log("\n‚ú® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
    console.log("üìù –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: deno task dev");
}

main().catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:", error);
    Deno.exit(1);
}); 